<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.standard.demo</groupId>
	<artifactId>dropwizard-hello-world</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>dropwizard-hello-world</name>
    <description>
        Sample Dropwizard 1.x based REST java microservice
        in support of deployment and infrastructure support testing
    </description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- build properties -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <timestamp>${maven.build.timestamp}</timestamp>
        <maven.build.timestamp.format>yyyy-MM-dd HH:mm z</maven.build.timestamp.format>
        <version.info.file>version.json</version.info.file>        
		
		<java.version>1.8</java.version>

        <!-- maven plugins -->
        <maven-compiler-plugin.version>2.3.2</maven-compiler-plugin.version>
        <maven-jar-plugin.version>2.4</maven-jar-plugin.version>
        <maven-source-plugin.version>2.2.1</maven-source-plugin.version>
        <maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
        <maven-site-plugin.version>3.0</maven-site-plugin.version>
        <build-helper-maven-plugin.version>1.8</build-helper-maven-plugin.version>
        <maven-shade-plugin.version>2.1</maven-shade-plugin.version>
        <maven-assembly-plugin.version>2.5.5</maven-assembly-plugin.version>
        <addjars-maven-plugin.version>1.0.5</addjars-maven-plugin.version>
        <maven-clean-plugin.version>2.5</maven-clean-plugin.version>
        <maven-site-plugin.version>3.4</maven-site-plugin.version>
        <flyway-maven-plugin.version>3.2</flyway-maven-plugin.version>
        <maven-checkstyle-plugin.version>2.16</maven-checkstyle-plugin.version>
        <jacoco-maven-plugin.version>0.7.4.201502262128</jacoco-maven-plugin.version>
        <maven-project-info-reports-plugin.version>2.8</maven-project-info-reports-plugin.version>
        <checkstyle.version>7.7</checkstyle.version>
        <checkstyle.file.url>http://jenkins-ci.standard.com/ci/checkstyle/standard-checkstyle.xml</checkstyle.file.url>
        <findbugs-maven-plugin.version>3.0.0</findbugs-maven-plugin.version>

        <!-- runtime dependency versions --> 

		<dropwizard.version>1.1.1</dropwizard.version>
        <encrypted-config-value-bundle-dropwizard1.version>1.0.2</encrypted-config-value-bundle-dropwizard1.version>

        <!-- test dependency versions -->
        <java-test-support.version>1.0</java-test-support.version>
        <commons-dbcp.version>1.4</commons-dbcp.version>
        <h2.version>1.4.181</h2.version>
        <flyway.version>3.2</flyway.version>
        <mockito.version>1.9.0</mockito.version>

        <!-- test properties -->
        <skip.unit.tests>false</skip.unit.tests>
        <test-properties-file>/test.properties</test-properties-file>
        <jacoco.reportPath>${project.build.directory}/coverage-reports/jacoco-ut.exec</jacoco.reportPath>        


	</properties>

	<dependencies>
	
		<!-- Runtime dependencies -->

        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-core</artifactId>
            <version>${dropwizard.version}</version>
        </dependency>

        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-jdbi</artifactId>
            <version>${dropwizard.version}</version>
        </dependency>


        <!-- Test dependencies -->

        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-testing</artifactId>
            <version>${dropwizard.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.standard.dev</groupId>
            <artifactId>java-test-support</artifactId>
            <version>${java-test-support.version}</version>
        </dependency>	

        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
            <version>${flyway.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
            <scope>test</scope>
        </dependency>        

	</dependencies>
	
	<build>
	
		<plugins>
		
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <verbose>true</verbose>
                    <fork>true</fork>
                    <compilerVersion>${java.version}</compilerVersion>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>${checkstyle.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <configLocation>${checkstyle.file.url}</configLocation>
                    <failOnViolation>false</failOnViolation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>${findbugs-maven-plugin.version}</version>
                <configuration>
                    <effort>Max</effort>
                    <threshold>Medium</threshold>
                    <failOnError>false</failOnError>
                    <xmlOutput>true</xmlOutput>
                    <findbugsXmlOutputDirectory>${project.build.directory}/findbugs</findbugsXmlOutputDirectory>
                    <excludeFilterFile>findbugs-exclude-filter.xml</excludeFilterFile>
                </configuration>
                <executions>
                    <!--
                        Ensures that FindBugs inspects source code when project is compiled.
                    -->
                    <execution>
                        <id>analyze-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <executions>
                    <!--
                        Prepares the property pointing to the JaCoCo runtime agent which
                        is passed as VM argument when Maven the Surefire plugin is executed.
                    -->
                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <destFile>${jacoco.reportPath}</destFile>
                            <!--
                                Sets the name of the property containing the settings
                                for JaCoCo runtime agent
                            -->
                            <propertyName>jacocoAgent</propertyName>
                        </configuration>
                    </execution>
                    <!--
                        Ensures that the code coverage report for unit tests is created after
                        the unit tests have been run
                    -->
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                            <!-- Sets the output directory for the code coverage report. -->
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <jvm>${java.home}/bin/java</jvm>
                    <systemPropertyVariables>
                        <test-properties-file>${test-properties-file}</test-properties-file>
                    </systemPropertyVariables>
                    <!-- sets the VM argument with jacoco agent when unit tests are run -->
                    <argLine>@{jacocoAgent}</argLine>
                    <!-- Skips unit tests if the value of skip.unit.tests property is true -->
                    <skipTests>${skip.unit.tests}</skipTests>
                    <!-- Exclude integration tests when unit tests are run. -->
                    <excludes>
                        <exclude>**/IT*.java</exclude>
                    </excludes>
                </configuration>
            </plugin>            

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>${maven-shade-plugin.version}</version>
                <configuration>
                    <createDependencyReducedPom>true</createDependencyReducedPom>
                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/*.SF</exclude>
                                <exclude>META-INF/*.DSA</exclude>
                                <exclude>META-INF/*.RSA</exclude>
                            </excludes>
                        </filter>
                    </filters>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>com.standard.demo.dwhelloworld.HelloWorldService</mainClass>
                                </transformer>

                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/cxf/bus-extensions.txt</resource>
                                </transformer>

                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
		
		</plugins>
	
	</build>
	
    <distributionManagement>
        <snapshotRepository>
            <id>nexus-snapshots</id>
            <name>Internal Snapshots</name>
            <url>https://nexus.standard.com:8443/nexus/content/repositories/snapshots/</url>
        </snapshotRepository>
        <repository>
            <id>nexus-releases</id>
            <name>Internal Releases</name>
            <url>https://nexus.standard.com:8443/nexus/content/repositories/releases/</url>
        </repository>
    </distributionManagement>	
	
</project>
